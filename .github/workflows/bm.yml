name: Build (bm)

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
                
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
      
    - name: Build with Gradle
      run: ./gradlew clean build fatJar dokka

    - name: Ausgabe
      run: | 
          ls -l
          pwd
    
    # Version auslesen
    - name: Read version
      id: get_version
      uses: christian-draeger/read-properties@1.0.1
      with:
        path: './gradle.properties'
        property: 'VERSION'
    
       
    # Release erstellen (DRAFT bis zur Freigabe ?
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MCBSTEST_TOKEN }}
      with:
          tag_name: '${{ steps.get_version.outputs.value }}'
          release_name: '${{ steps.get_version.outputs.value }}'
          draft: false
          prerelease: false
          
    # Release JAR hinzuf√ºgen
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/AtlassianDeveloperTools-all-${{ steps.get_version.outputs.value }}.jar
          asset_name: AtlassianDeveloperTools-all-${{ steps.get_version.outputs.value }}.jar
          asset_content_type: application/java-archive
  
    # - name: JavaDoc / Dokka
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: Java-Doc
    #     path: ./javadoc
